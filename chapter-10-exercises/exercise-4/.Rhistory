grants <- read.csv('data/gates_money.csv', stringsAsFactors = FALSE)
View(grants)
organization <- grants$organization
is.vector(organization)
mean_grant <- average(grants[grants$total_amount])
# What was the mean grant value?
mean_grant <- average(grants[grants$total_amount], 'total_amount')
mean_grant <- average(grants$total_amount)
mean_grant <- mean(grants$total_amount)
largest_grant = max(grants$total_amount)
View(grants)
# Which organization received the largest grant?
largest_grant_org <- salaries[salaries$total_amount == largest_grant, 'total_amount']
# Which organization received the largest grant?
largest_grant_org <- grants[grants$total_amount == largest_grant, 'total_amount']
# Which organization received the largest grant?
largest_grant_org <- grants[grants$total_amount == largest_grant, 'organization']
# Which organization received the smallest grant?
smallest_grant_org <- grants[grants$total_amount == smallest_grant, 'organization']
# Exercise 4: external data sets: Gates Foundation Educational Grants
# Use the `read.csv()` functoin to read the data from the `data/gates_money.csv`
# file into a variable called `grants` using the `read.csv()`
# Be sure to set your working directory in RStudio, and do NOT treat strings as
# factors!
grants <- read.csv('data/gates_money.csv', stringsAsFactors = FALSE)
# Use the View function to look at the loaded data
View(grants)
# Create a variable `organization` that contains the `organization` column of
# the dataset
organization <- grants$organization
# Confirm that the "organization" column is a vector using the `is.vector()`
# function.
# This is a useful debugging tip if you hit errors later!
is.vector(organization)
## Now you can ask some interesting questions about the dataset
# What was the mean grant value?
mean_grant <- mean(grants$total_amount)
# What was the dollar amount of the largest grant?
largest_grant <- max(grants$total_amount)
# What was the dollar amount of the smallest grant?
smallest_grant <- min(grants$total_amount)
# Which organization received the largest grant?
largest_grant_org <- grants[grants$total_amount == largest_grant, 'organization']
# Which organization received the smallest grant?
smallest_grant_org <- grants[grants$total_amount == smallest_grant, 'organization']
# Which organization received the smallest grant?
smallest_grant_org <- grants[grants$total_amount == smallest_grant, 'organization']
# How many grants were awarded in 2010?
total_grants <- nrow(grants)
calc_survival_rate <- function(input){
ticket_class <- as.character(input)
class_info <- titanic_df[titanic_df$Class == ticket_class, ]
class_men <- class_info[class_info$Sex == "Male" & class_info$Age == "Adult", ]
View(class_men)
#Find out the men's percentage
men_survival <- class_info[class_info$Survived == "Yes", ] /
sum(class_men$Freq)
print(men_survival)
#return("Of" + ticket_class + "class,")
}
calc_survival_rate("3rd")
calc_survival_rate <- function(input, titanic_df){
ticket_class <- as.character(input)
class_info <- titanic_df[titanic_df$Class == ticket_class, ]
class_men <- class_info[class_info$Sex == "Male" & class_info$Age == "Adult", ]
View(class_men)
#Find out the men's percentage
men_survival <- class_info[class_info$Survived == "Yes", ] /
sum(class_men$Freq)
print(men_survival)
#return("Of" + ticket_class + "class,")
}
calc_survival_rate("3rd")
calc_survival_rate <- function(input, titanic_df){
ticket_class <- as.character(input)
class_info <- titanic_df[titanic_df$Class == ticket_class, ]
class_men <- class_info[class_info$Sex == "Male" & class_info$Age == "Adult", ]
View(class_men)
#Find out the men's percentage
men_survival <- class_info[class_info$Survived == "Yes", ] /
sum(class_men$Freq)
print(men_survival)
#return("Of" + ticket_class + "class,")
}
calc_survival_rate("3rd", titanic_df)
calc_survival_rate <- function(input){
ticket_class <- as.character(input)
class_info <- titanic_df[titanic_df$Class == ticket_class, ]
class_men <- class_info[class_info$Sex == "Male" & class_info$Age == "Adult", ]
View(class_men)
#Find out the men's percentage
men_survival <- class_info[class_info$Survived == "Yes", ] /
sum(class_men$Freq)
print(men_survival)
#return("Of" + ticket_class + "class,")
}
calc_survival_rate("3rd")
calc_survival_rate <- function(input){
ticket_class <- as.character(input)
class_info <- titanic_df[titanic_df$Class == ticket_class, ]
class_men <- class_info[class_info$Sex == "Male" & class_info$Age == "Adult", ]
View(class_men)
class_men_survived <- class_info[class_info$Survived == "Yes", ]
#Find out the men's percentage
men_survival <- class_men_survived$Freq /
sum(class_men$Freq)
print(men_survival)
#return("Of" + ticket_class + "class,")
}
calc_survival_rate("3rd")
#################
#### PART 1 #####
#################
# Your script for Part 1 goes here (and delete this comment!)
#creating a variable with all of the TAs names
tas <- c("Phuong", "Yunwei", "Yubing", "Gavin", "Coco", "George", "Saurav", "Yuyu")
#creating a variable containing 8 numeric grades with a mean of 3.6 and a standard deviation of 0.4
math_grades <- rnorm(8, 3.6, 0.4)
#variable contains 8 numeric grades with a mean of 3.8 and a standard deviations 0.25
spanish_grades <- rnorm(8, 3.8, 0.25)
#this data frame holds the tas and their math grades and spanish grades
ta_grades <- data.frame(tas, math_grades, spanish_grades, stringsAsFactors = FALSE)
#combining the column names and putting them into a string and then printinging out a
#description of the table
colnames_string <- paste(colnames(ta_grades), collapse = ", ")
table_description <- paste("The grade data frame has: ", nrow(ta_grades),"rows and",
ncol(ta_grades),"cols:", colnames_string)
print(table_description)
#change column names to singular
new_colnames_string <- c("ta", "math_grade", "spanish_grade")
colnames(ta_grades) = new_colnames_string
#adding a column to determine who is better at math than spanish
#first this vector conatains the information if the math grade is higher than the
#spanish grade.
better_at_math_bool <- ta_grades$math_grade > ta_grades$spanish_grade
#then you add a new colum containing the better_at_math_bool
ta_grades$better_at_math <- better_at_math_bool
#now let's print out how my TA did, my TA is Coco
print(ta_grades[ta_grades$ta == "Coco", ])
#now counting how many TAs are better at math
num_better_at_math <- nrow(ta_grades[ta_grades$better_at_math == TRUE, ])
#If the grade is above a 4.0 make sure it is reduced to a 4.0
ta_grades[ta_grades$math_grade > 4.0, "mathgrade"] <- 4.0
ta_grades[ta_grades$spanish_grade > 4.0, "spanish_grade"] <- 4.0
#write this data into a CSV file
write.csv(ta_grades, 'ta_grades.csv', row.names = TRUE)
#################
#### PART 2 #####
#################
#getting the titanic data and Viewing it
data(Titanic)
View(Titanic)
#Viewing this data in a data frame
is.data.frame(Titanic)
#creating a new dataframe to hold the Titanic information
titanic_df <- as.data.frame(Titanic, stringsAsFactors = FALSE)
#This variable holds a data frame with all of the children that were on the Titanic
children <- titanic_df[titanic_df$Age == "Child", ]
View(children)
#This variable shows the total number of children that were
#on the titanic
num_children <- sum(children$Freq)
#This variable holds the category that had the most losses
#as in, which category most people died in
#it filters out those who died, and finds the max number and prints
losses <- titanic_df[titanic_df$Survived == "No", ]
most_losses <- losses[losses$Freq == max(losses$Freq), ]
print(most_losses)
#This function will take a string that is related to the
#ticket class and will calculate their survival rate
calc_survival_rate <- function(input){
ticket_class <- as.character(input)
class_info <- titanic_df[titanic_df$Class == ticket_class, ]
class_men <- class_info[class_info$Sex == "Male" & class_info$Age == "Adult", ]
View(class_men)
class_men_survived <- class_info[class_info$Survived == "Yes", ]
#Find out the men's percentage
men_survival <- class_men_survived$Freq /
sum(class_men$Freq)
print(men_survival)
#return("Of" + ticket_class + "class,")
}
calc_survival_rate("3rd")
#getting the titanic data and Viewing it
data(Titanic)
View(Titanic)
#Viewing this data in a data frame
is.data.frame(Titanic)
#creating a new dataframe to hold the Titanic information
titanic_df <- as.data.frame(Titanic, stringsAsFactors = FALSE)
#This variable holds a data frame with all of the children that were on the Titanic
children <- titanic_df[titanic_df$Age == "Child", ]
View(children)
#This variable shows the total number of children that were
#on the titanic
num_children <- sum(children$Freq)
#This variable holds the category that had the most losses
#as in, which category most people died in
#it filters out those who died, and finds the max number and prints
losses <- titanic_df[titanic_df$Survived == "No", ]
most_losses <- losses[losses$Freq == max(losses$Freq), ]
print(most_losses)
#This function will take a string that is related to the
#ticket class and will calculate their survival rate
calc_survival_rate <- function(input){
ticket_class <- as.character(input)
class_info <- titanic_df[titanic_df$Class == ticket_class, ]
class_men <- class_info[class_info$Sex == "Male" & class_info$Age == "Adult", ]
View(class_men)
class_men_survived <- class_info[class_info$Survived == "Yes", ]
#Find out the men's percentage
men_survival <- class_men_survived$Freq /
sum(class_men$Freq)
print(men_survival)
#return("Of" + ticket_class + "class,")
}
calc_survival_rate("3rd")
#################
#### PART 3 #####
#################
# Your script for Part 3 goes here (and delete this comment!)
print(sum(class_men$Freq))
print(class_men_survived$Freq)
calc_survival_rate <- function(input){
ticket_class <- as.character(input)
class_info <- titanic_df[titanic_df$Class == ticket_class, ]
class_men <- class_info[class_info$Sex == "Male" & class_info$Age == "Adult", ]
View(class_men)
class_men_survived <- class_info[class_info$Survived == "Yes", ]
#Find out the men's percentage
men_survival <- class_men_survived$Freq /
sum(class_men$Freq)
print(sum(class_men$Freq))
print(class_men_survived$Freq)
#return("Of" + ticket_class + "class,")
}
calc_survival_rate("3rd")
calc_survival_rate <- function(input){
ticket_class <- as.character(input)
class_info <- titanic_df[titanic_df$Class == ticket_class, ]
class_men <- class_info[class_info$Sex == "Male" & class_info$Age == "Adult", ]
View(class_men)
class_men_survived <- class_info[class_men$Survived == "Yes", ]
#Find out the men's percentage
men_survival <- class_men_survived$Freq /
sum(class_men$Freq)
print(sum(class_men$Freq))
print(class_men_survived$Freq)
#return("Of" + ticket_class + "class,")
}
calc_survival_rate("3rd")
calc_survival_rate <- function(input){
ticket_class <- as.character(input)
class_info <- titanic_df[titanic_df$Class == ticket_class, ]
class_men <- class_info[class_info$Sex == "Male" & class_info$Age == "Adult", ]
View(class_men)
class_men_survived <- class_men[class_men$Survived == "Yes", ]
#Find out the men's percentage
men_survival <- class_men_survived$Freq /
sum(class_men$Freq)
print(sum(class_men$Freq))
print(class_men_survived$Freq)
#return("Of" + ticket_class + "class,")
}
calc_survival_rate("3rd")
calc_survival_rate <- function(input){
ticket_class <- as.character(input)
class_info <- titanic_df[titanic_df$Class == ticket_class, ]
class_men <- class_info[class_info$Sex == "Male" & class_info$Age == "Adult", ]
View(class_men)
class_men_survived <- class_men[class_men$Survived == "Yes", ]
#Find out the men's percentage
men_survival <- class_men_survived$Freq /
sum(class_men$Freq)
print(men_survival)
#return("Of" + ticket_class + "class,")
}
calc_survival_rate("3rd")
