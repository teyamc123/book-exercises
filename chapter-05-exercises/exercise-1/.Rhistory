hometown <- "Kenmore"
hometown <- "Kenmore"
# Assign your name to the variable `my_name`
my_name <- "Teya"
# Assign your height (in inches) to a variable `my_height`
my_height <- 5.75
# Create a variable `puppies` equal to the number of puppies you'd like to have
puppies <- 2
# Create a variable `puppy_price`, which is how much you think a puppy costs
puppy_price <- 5000
# Create a variable `total_cost` that has the total cost of all of your puppies
total_cost <- 10000
# Create a boolean variable `too_expensive`, set to TRUE if the cost is greater
# tha
# Exercise 1: practice with basic R syntax
# Create a variable `hometown` that stores the city in which you were born
hometown <- "Kenmore"
# Assign your name to the variable `my_name`
my_name <- "Teya"
# Assign your height (in inches) to a variable `my_height`
my_height <- 5.75
# Create a variable `puppies` equal to the number of puppies you'd like to have
puppies <- 2
# Create a variable `puppy_price`, which is how much you think a puppy costs
puppy_price <- 5000
# Create a variable `total_cost` that has the total cost of all of your puppies
total_cost <- 10000
# Create a boolean variable `too_expensive`, set to TRUE if the cost is greater
# than $1,000
too_expensive <- TRUE
# Create a variable `max_puppies`, which is the number of puppies you can
# afford for $1,000
max_puppies <- 0
my_name <- "Teya"
# Create a variable `name_length` that holds how many letters (including spaces)
# are in your name (use the `nchar()` function)
name_length <- nchar(my_name)
calculate_ratio <- function(____) {
ratio <- ____
return(____)
}
calculate_ratio(60, 12)
calculate_ratio <- function(x, y) {
ratio <- x/y
return(ratio)
}
# Call calculate_ratio()
calculate_ratio(60, 12)
intro <- function(year, major) {
greet <- paste("Hello I am a ", year, "year, and my major is ", major, ".")
return(greet)
}
# Call intro() function
intro("Teya", "2")
intro <- function(year, major) {
greet <- paste("Hello I am a", year, "year, and my major is", major, ".")
return(greet)
}
# Call intro() function
intro("Teya", "2")
hours <-   35# 35 hours were worked this week
pay_rate <-  12 # Pay rate was at Seattle minimum wage
earnings <- hours * pay_rate
earnings
employee1_earnings <- calculate_earnings(10, 12)
print(employee1_earnings)
#
hours <- 20
pay_rate <- 30
employee3_earnings <- calculate_earnings(hours, pay_rate)
print(employee3_earnings)
hours <- 20
pay_rate <- 30
employee3_earnings <- calculate_earnings(hours, pay_rate)
print(employee3_earnings)
#
hours <- 20
pay_rate <- 30
calculate_earnings <- function(10.0, 12.00) {
earnings <- hours * pay_rate
return(earnings)
employee3_earnings <- calculate_earnings_v2(60.0, 12.00)
calculate_earnings_v2 <- function(hours, pay_rate) {
hours * pay_rate # You have to assign a returned value to a variable to use it
# printing a value is different from returning a value
}
employee3_earnings <- calculate_earnings_v2(60.0, 12.00)
calculate_earnings <- function(hours, pay_rate) {
earnings <- hours * pay_rate
return(earnings)
}
# **Question 4.** Think, pair, share - Similarly, why would the following function not work?
#
# ***Hint:*** Error message returned is error in calculate_earnings(hours, pay_rate) : object 'hours' not found.
#
# **Answer:** When we call functions, the functions need to be passed with values, not only variable names, which are not define before.
#
hours <- 20
pay_rate <- 30
employee3_earnings <- calculate_earnings(hours, pay_rate)
print(employee3_earnings)
calculate_earnings_v2 <- function(hours, pay_rate) {
hours * pay_rate # You have to assign a returned value to a variable to use it
# printing a value is different from returning a value
}
employee3_earnings <- calculate_earnings_v2(60.0, 12.00)
result <- return("The last show I watched was", documentary)
return(result)
}
current_show <- watch("The Witcher")
print(current_show)
watch <- function(documentary) {
result <- "The last show I watched was"+  documentary
return(result)
}
current_show <- watch("The Witcher")
print(current_show)
watch <- function(documentary) {
result <- paste("The last show I watched was", documentary)
return(result)
}
current_show <- watch("The Witcher")
print(current_show)
days_to_deadline <- function(deadline, today) {  # This takes in the parameters of when the deadline is and what the current date is
days_remaining <- as.Date(deadline) - as.Date(today)  # This takes the deadline date and the current date and formats them and also subtracts the deadling from the current date
return(days_remaining)  # returns the value
}
# 2. What will each of the following lines return?
#   Note, you may need to print the variables.
a2_days_left <- days_to_deadline("2020-01-23", "2020-01-14")
winter_finals_end <- days_to_deadline("2020-03-20", "2020-01-14")
july_fourth <- days_to_deadline("2020-07-04", "2020-01-14")
days_to_deadline <- function(deadline, today) {  # This takes in the parameters of when the deadline is and what the current date is
days_remaining <- as.Date(deadline) - as.Date(today)  # This takes the deadline date and the current date and formats them and also subtracts the deadling from the current date
return(days_remaining)  # returns the value
}
# 2. What will each of the following lines return?
#   Note, you may need to print the variables.
a2_days_left <- days_to_deadline(2020-01-23, 2020-01-14)
